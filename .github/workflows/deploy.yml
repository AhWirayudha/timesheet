name: Deploy to Production

on:
  push:
    tags:
      - 'v*'

jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Deploy to Production
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run all checks
      run: npm run ci
      
    - name: Build application
      run: npm run build
      
    - name: Create release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
        
    - name: Upload build artifacts
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./.next
        asset_name: build-files
        asset_content_type: application/zip
        
    - name: Deploy to Vercel (example)
      if: env.VERCEL_TOKEN != ''
      run: |
        # Example deployment to Vercel
        # You can replace this with your actual deployment platform
        echo "Deploying to production..."
        # npx vercel --prod --token ${{ secrets.VERCEL_TOKEN }}
        
    - name: Notify deployment success
      run: |
        echo "ðŸš€ Successfully deployed version ${{ github.ref }} to production!"
        echo "Release URL: ${{ steps.create_release.outputs.html_url }}" 